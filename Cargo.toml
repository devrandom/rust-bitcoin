[package]
name = "bitcoin"
version = "0.26.0"
authors = ["Andrew Poelstra <apoelstra@wpsoftware.net>"]
license = "CC0-1.0"
homepage = "https://github.com/rust-bitcoin/rust-bitcoin/"
repository = "https://github.com/rust-bitcoin/rust-bitcoin/"
documentation = "https://docs.rs/bitcoin/"
description = "General purpose library for using and interoperating with Bitcoin and other cryptocurrencies."
keywords = [ "crypto", "bitcoin" ]
readme = "README.md"


[features]
default = [ "std", "secp-recovery", "merkleblock", "compact-block-filters" ]
base64 = [ "base64-compat" ]
fuzztarget = []
unstable = []
rand = ["secp256k1/rand-std"]
use-serde = ["serde", "bitcoin_hashes/serde", "secp256k1/serde"]
secp-lowmemory = ["secp256k1/lowmemory"]
secp-recovery = ["secp256k1/recovery"]

# either std or no-std must be selected
std = ["secp256k1/std", "bitcoin_hashes/std", "bech32/std"]
no-std = ["hashbrown/nightly"]

compact-block-filters = ["hashbrown"]
merkleblock = ["hashbrown"]

[dependencies]
bitcoin_hashes = { version = "0.9.6", default-features = false }
secp256k1 = { version = "0.20.0", default-features = false }

base64-compat = { version = "1.0.0", optional = true }
bitcoinconsensus = { version = "0.19.0-1", optional = true }
serde = { version = "1", features = [ "derive" ], optional = true }
hashbrown = { version = "0.1.8", optional = true }

[dependencies.bech32]
git = "https://github.com/rust-bitcoin/rust-bech32.git"
default-features = false

[dev-dependencies]
bitcoin_hashes = { version = "0.9.6" }  # need std for test hex handling
serde_json = "<1.0.45"
serde_test = "1"
secp256k1 = { version = "0.20.0", features = [ "recovery", "rand-std" ] }
bincode = "1.3.1"
# We need to pin ryu (transitive dep from serde_json) to stay compatible with Rust 1.22.0
ryu = "<1.0.5"

[[example]]
name = "bip32"

[[example]]
name = "handshake"
required-features = ["std"]
